!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/began/sources/suckless/dwm/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20220828.0/
${OBJ}	dwm/Makefile	/^${OBJ}: config.h config.mk$/;"	t
-1007,7 +1125,8	patches/dwm-systray-6.3.diff	/^@@ -1007,7 +1125,8 @@ killclient(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-101,8 +106,8	patches/dwm-systray-6.3.diff	/^@@ -101,8 +106,8 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-1076,7 +1090,7	patches/dwm-attachaside-6.3.diff	/^@@ -1076,7 +1090,7 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-1077,6 +1097,45	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1077,6 +1097,45 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-109,7 +124,9	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -109,7 +124,9 @@$/;"	h	modifiedFile:dwm-6.3-ori/config.def.h
-1096,6 +1215,13	patches/dwm-systray-6.3.diff	/^@@ -1096,6 +1215,13 @@ maprequest(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-1097,7 +1156,9	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1097,7 +1156,9 @@ maprequest(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-116,7 +116,8	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -116,7 +116,8 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-119,6 +119,7	patches/dwm-fullgaps-20200508-7b77734.diff	/^@@ -119,6 +119,7 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-1210,6 +1224,16	patches/dwm-attachaside-6.3.diff	/^@@ -1210,6 +1224,16 @@ movemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1219,7 +1345,18	patches/dwm-systray-6.3.diff	/^@@ -1219,7 +1345,18 @@ propertynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-1249,17 +1299,24	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -1249,17 +1299,24 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-1249,6 +1278,16	patches/dwm-cool-autostart-6.2.diff	/^@@ -1249,6 +1278,16 @@ propertynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-1269,6 +1406,19	patches/dwm-systray-6.3.diff	/^@@ -1269,6 +1406,19 @@ recttomon(int x, int y, int w, int h)$/;"	h	modifiedFile:a/dwm.c
-1276,6 +1426,14	patches/dwm-systray-6.3.diff	/^@@ -1276,6 +1426,14 @@ resize(Client *c, int x, int y, int w, int h, int interact)$/;"	h	modifiedFile:a/dwm.c
-129,6 +130,7	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -129,6 +130,7 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-1348,6 +1506,19	patches/dwm-systray-6.3.diff	/^@@ -1348,6 +1506,19 @@ resizemouse(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1380,6 +1386,83	patches/dwm-autostart-20210120-cb3f58a.diff	/^@@ -1380,6 +1386,83 @@ run(void)$/;"	h	modifiedFile:a/dwm.c
-139,6 +146,7	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -139,6 +146,7 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-1393,7 +1454,9	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1393,7 +1454,9 @@ scan(void)$/;"	h	modifiedFile:a/dwm.c
-140,6 +140,16	patches/dwm-fullgaps-20200508-7b77734.diff	/^@@ -140,6 +140,16 @@ View all windows with any tag.$/;"	h	modifiedFile:a/dwm.1
-1408,6 +1471,29	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1408,6 +1471,29 @@ scan(void)$/;"	h	modifiedFile:a/dwm.c
-141,6 +156,12	patches/dwm-systray-6.3.diff	/^@@ -141,6 +156,12 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-1429,7 +1486,7	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -1429,7 +1486,7 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-1434,7 +1458,7	patches/dwm-attachaside-6.3.diff	/^@@ -1434,7 +1458,7 @@ sendmon(Client *c, Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1437,26 +1608,37	patches/dwm-systray-6.3.diff	/^@@ -1437,26 +1608,37 @@ setclientstate(Client *c, long state)$/;"	h	modifiedFile:a/dwm.c
-147,6 +148,7	patches/dwm-attachaside-6.3.diff	/^@@ -147,6 +148,7 @@ static int applysizehints(Client *c, int *x, int *y, int *w, int *h, int int/;"	h	modifiedFile:a/dwm.c
-1470,7 +1652,7	patches/dwm-systray-6.3.diff	/^@@ -1470,7 +1652,7 @@ setfocus(Client *c)$/;"	h	modifiedFile:a/dwm.c
-1498,6 +1501,16	patches/dwm-fullgaps-20200508-7b77734.diff	/^@@ -1498,6 +1501,16 @@ setfullscreen(Client *c, int fullscreen)$/;"	h	modifiedFile:a/dwm.c
-152,6 +160,21	patches/dwm-autostart-20210120-cb3f58a.diff	/^@@ -152,6 +160,21 @@ Toggles focused window between floating and tiled state.$/;"	h	modifiedFile:a/dwm.1
-1546,7 +1632,7	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1546,7 +1632,7 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1547,7 +1549,10	patches/dwm-barpadding-20211020-a786211.diff	/^@@ -1547,7 +1549,10 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1558,15 +1740,22	patches/dwm-systray-6.3.diff	/^@@ -1558,15 +1740,22 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1568,9 +1569,14	patches/dwm-rainbowtags-6.2.diff	/^@@ -1568,9 +1569,14 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1574,6 +1763,8	patches/dwm-systray-6.3.diff	/^@@ -1574,6 +1763,8 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1595,6 +1681,7	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1595,6 +1681,7 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-16,6 +16,11	patches/dwm-colorbar-6.2.diff	/^@@ -16,6 +16,11 @@ static const char *colors[][3]      = {$/;"	h	modifiedFile:a/config.def.h
-1632,9 +1671,25	patches/dwm-cool-autostart-6.2.diff	/^@@ -1632,9 +1671,25 @@ showhide(Client *c)$/;"	h	modifiedFile:a/dwm.c
-1653,6 +1740,13	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1653,6 +1740,13 @@ spawn(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1684,18 +1697,18	patches/dwm-fullgaps-20200508-7b77734.diff	/^@@ -1684,18 +1697,18 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-17,10 +16,26	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -17,10 +16,26 @@$/;"	h	modifiedFile:dwm-6.3-ori/config.def.h
-1702,9 +1796,18	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1702,9 +1796,18 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1703,7 +1703,7	patches/dwm-gaps-6.0.diff	/^@@ -1703,7 +1703,7 @@ textnw(const char *text, unsigned int len) {$/;"	h	modifiedFile:a/dwm.c
-1704,7 +1709,7	patches/dwm-barpadding-20211020-a786211.diff	/^@@ -1704,7 +1709,7 @@ togglebar(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1707,7 +1898,18	patches/dwm-systray-6.3.diff	/^@@ -1707,7 +1898,18 @@ togglebar(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1711,19 +1711,21	patches/dwm-gaps-6.0.diff	/^@@ -1711,19 +1711,21 @@ tile(Monitor *m) {$/;"	h	modifiedFile:a/dwm.c
-172,6 +193,7	patches/dwm-systray-6.3.diff	/^@@ -172,6 +193,7 @@ static void focusstack(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-1757,6 +1814,7	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -1757,6 +1814,7 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-1787,10 +1890,41	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1787,10 +1890,41 @@ unmanage(Client *c, int destroyed)$/;"	h	modifiedFile:a/dwm.c
-179,6 +181,8	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -179,6 +181,8 @@ static void incnmaster(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-1798,12 +1932,18	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1798,12 +1932,18 @@ unmapnotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-18,6 +18,11	patches/dwm-cool-autostart-6.2.diff	/^@@ -18,6 +18,11 @@ static const char *colors[][3]      = {$/;"	h	modifiedFile:a/config.def.h
-1802,11 +2004,18	patches/dwm-systray-6.3.diff	/^@@ -1802,11 +2004,18 @@ unmapnotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-1814,7 +1819,7	patches/dwm-barpadding-20211020-a786211.diff	/^@@ -1814,7 +1819,7 @@ updatebars(void)$/;"	h	modifiedFile:a/dwm.c
-1817,10 +2026,15	patches/dwm-systray-6.3.diff	/^@@ -1817,10 +2026,15 @@ updatebars(void)$/;"	h	modifiedFile:a/dwm.c
-1829,11 +1834,11	patches/dwm-barpadding-20211020-a786211.diff	/^@@ -1829,11 +1834,11 @@ updatebarpos(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1829,11 +1969,11	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -1829,11 +1969,11 @@ updatebarpos(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1832,6 +1890,37	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -1832,6 +1890,37 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-184,6 +186,7	patches/dwm-attachaside-6.3.diff	/^@@ -184,6 +186,7 @@ static void maprequest(XEvent *e);$/;"	h	modifiedFile:a/dwm.c
-189,13 +211,16	patches/dwm-systray-6.3.diff	/^@@ -189,13 +211,16 @@ static void pop(Client *);$/;"	h	modifiedFile:a/dwm.c
-1891,7 +1915,7	patches/dwm-attachaside-6.3.diff	/^@@ -1891,7 +1915,7 @@ updategeom(void)$/;"	h	modifiedFile:a/dwm.c
-193,6 +194,7	patches/dwm-autostart-20210120-cb3f58a.diff	/^@@ -193,6 +194,7 @@ static void resizeclient(Client *c, int x, int y, int w, int h);$/;"	h	modifiedFile:a/dwm.c
-195,6 +199,7	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -195,6 +199,7 @@ static void resizemouse(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-1996,6 +2210,125	patches/dwm-systray-6.3.diff	/^@@ -1996,6 +2210,125 @@ updatestatus(void)$/;"	h	modifiedFile:a/dwm.c
-2,6 +2,7	patches/dwm-fullgaps-20200508-7b77734.diff	/^@@ -2,6 +2,7 @@$/;"	h	modifiedFile:a/config.def.h
-2,9 +2,14	patches/dwm-systray-6.3.diff	/^@@ -2,9 +2,14 @@$/;"	h	modifiedFile:a/config.def.h
-200,6 +201,7	patches/dwm-fullgaps-20200508-7b77734.diff	/^@@ -200,6 +201,7 @@ static void sendmon(Client *c, Monitor *m);$/;"	h	modifiedFile:a/dwm.c
-2020,7 +2109,7	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -2020,7 +2109,7 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-2063,6 +2396,16	patches/dwm-systray-6.3.diff	/^@@ -2063,6 +2396,16 @@ wintoclient(Window w)$/;"	h	modifiedFile:a/dwm.c
-2067,6 +2156,41	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -2067,6 +2156,41 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-207,6 +212,7	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -207,6 +212,7 @@ static void seturgent(Client *c, int urg);$/;"	h	modifiedFile:a/dwm.c
-207,6 +232,7	patches/dwm-systray-6.3.diff	/^@@ -207,6 +232,7 @@ static void seturgent(Client *c, int urg);$/;"	h	modifiedFile:a/dwm.c
-2070,13 +2210,35	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -2070,13 +2210,35 @@ wintomon(Window w)$/;"	h	modifiedFile:a/dwm.c
-21,6 +21,18	patches/dwm-rainbowtags-6.2.diff	/^@@ -21,6 +21,18 @@ static const char *colors[][3]      = {$/;"	h	modifiedFile:a/config.def.h
-2116,6 +2459,22	patches/dwm-systray-6.3.diff	/^@@ -2116,6 +2459,22 @@ xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	h	modifiedFile:a/dwm.c
-2139,3 +2141,106	patches/dwm-centeredmaster-6.1.diff	/^@@ -2139,3 +2141,106 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-2139,6 +2194,7	patches/dwm-cool-autostart-6.2.diff	/^@@ -2139,6 +2194,7 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-2142,6 +2223,7	patches/dwm-autostart-20210120-cb3f58a.diff	/^@@ -2142,6 +2223,7 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-216,6 +222,8	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -216,6 +222,8 @@ static void toggletag(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-2207,10 +2331,27	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -2207,10 +2331,27 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-224,18 +250,23	patches/dwm-systray-6.3.diff	/^@@ -224,18 +250,23 @@ static int updategeom(void);$/;"	h	modifiedFile:a/dwm.c
-2273,13 +2414,10	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -2273,13 +2414,10 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-230,6 +238,7	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -230,6 +238,7 @@ static void updatewmhints(Client *c);$/;"	h	modifiedFile:a/dwm.c
-231,6 +239,7	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -231,6 +239,7 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-233,6 +233,8	patches/dwm-centeredmaster-6.1.diff	/^@@ -233,6 +233,8 @@ static int xerror(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-234,6 +234,7	patches/dwm-cool-autostart-6.2.diff	/^@@ -234,6 +234,7 @@ static int xerror(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-235,7 +237,11	patches/dwm-autostart-20210120-cb3f58a.diff	/^@@ -235,7 +237,11 @@ static int xerrorstart(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-242,6 +242,8	patches/dwm-barpadding-20211020-a786211.diff	/^@@ -242,6 +242,8 @@ static int screen;$/;"	h	modifiedFile:a/dwm.c
-246,6 +255,7	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -246,6 +255,7 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-258,9 +289,10	patches/dwm-systray-6.3.diff	/^@@ -258,9 +289,10 @@ static void (*handler[LASTEvent]) (XEvent *) = {$/;"	h	modifiedFile:a/dwm.c
-264,6 +264,7	patches/dwm-rainbowtags-6.2.diff	/^@@ -264,6 +264,7 @@ static Atom wmatom[WMLast], netatom[NetLast];$/;"	h	modifiedFile:a/dwm.c
-266,14 +276,17	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -266,14 +276,17 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-275,6 +276,34	patches/dwm-cool-autostart-6.2.diff	/^@@ -275,6 +276,34 @@ static Window root, wmcheckwin;$/;"	h	modifiedFile:a/dwm.c
-29,6 +29,7	patches/dwm-autostart-20210120-cb3f58a.diff	/^@@ -29,6 +29,7 @@$/;"	h	modifiedFile:a/dwm.c
-30,6 +30,14	patches/dwm-autostart-20210120-cb3f58a.diff	/^@@ -30,6 +30,14 @@ top left corner.  The tags which are applied to one or more windows are$/;"	h	modifiedFile:a/dwm.1
-300,6 +313,7	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -300,6 +313,7 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-39,6 +39,8	patches/dwm-centeredmaster-6.1.diff	/^@@ -39,6 +39,8 @@ static const Layout layouts[] = {$/;"	h	modifiedFile:a/config.def.h
-4,7 +4,6	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -4,7 +4,6 @@$/;"	h	modifiedFile:dwm-6.3-ori/config.def.h
-40,6 +40,7	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -40,6 +40,7 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-406,6 +409,17	patches/dwm-attachaside-6.3.diff	/^@@ -406,6 +409,17 @@ attach(Client *c)$/;"	h	modifiedFile:a/dwm.c
-440,7 +472,7	patches/dwm-systray-6.3.diff	/^@@ -440,7 +472,7 @@ buttonpress(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-449,13 +463,13	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -449,13 +463,13 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-463,25 +477,29	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -463,25 +477,29 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-47,8 +47,8	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -47,8 +47,8 @@$/;"	h	modifiedFile:a/dwm.c
-483,7 +515,14	patches/dwm-systray-6.3.diff	/^@@ -483,7 +515,14 @@ cleanup(void)$/;"	h	modifiedFile:a/dwm.c
-49,7 +49,8	patches/dwm-attachaside-6.3.diff	/^@@ -49,7 +49,8 @@$/;"	h	modifiedFile:a/dwm.c
-5,6 +5,10	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -5,6 +5,10 @@ static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	h	modifiedFile:a/config.def.h
-5,6 +5,8	patches/dwm-barpadding-20211020-a786211.diff	/^@@ -5,6 +5,8 @@ static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	h	modifiedFile:a/config.def.h
-505,8 +514,10	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -505,8 +514,10 @@ cleanupmon(Monitor *mon)$/;"	h	modifiedFile:a/dwm.c
-513,9 +552,58	patches/dwm-systray-6.3.diff	/^@@ -513,9 +552,58 @@ cleanupmon(Monitor *mon)$/;"	h	modifiedFile:a/dwm.c
-56,6 +57,13	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -56,6 +57,13 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-568,7 +570,7	patches/dwm-barpadding-20211020-a786211.diff	/^@@ -568,7 +570,7 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-568,7 +579,7	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -568,7 +579,7 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-568,7 +656,7	patches/dwm-systray-6.3.diff	/^@@ -568,7 +656,7 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-57,12 +57,27	patches/dwm-systray-6.3.diff	/^@@ -57,12 +57,27 @@$/;"	h	modifiedFile:a/dwm.c
-59,7 +59,7	patches/dwm-colorbar-6.2.diff	/^@@ -59,7 +59,7 @@$/;"	h	modifiedFile:a/dwm.c
-639,6 +641,7	patches/dwm-fullgaps-20200508-7b77734.diff	/^@@ -639,6 +641,7 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-639,6 +650,7	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -639,6 +650,7 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-649,10 +661,15	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -649,10 +661,15 @@ void$/;"	h	modifiedFile:a/dwm.c
-653,6 +741,11	patches/dwm-systray-6.3.diff	/^@@ -653,6 +741,11 @@ destroynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-696,6 +713,9	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^@@ -696,6 +713,9 @@ dirtomon(int dir)$/;"	h	modifiedFile:a/dwm.c
-696,7 +789,7	patches/dwm-systray-6.3.diff	/^@@ -696,7 +789,7 @@ dirtomon(int dir)$/;"	h	modifiedFile:a/dwm.c
-703,7 +703,7	patches/dwm-colorbar-6.2.diff	/^@@ -703,7 +703,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-705,13 +798,17	patches/dwm-systray-6.3.diff	/^@@ -705,13 +798,17 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-706,7 +708,7	patches/dwm-barpadding-20211020-a786211.diff	/^@@ -706,7 +708,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-71,8 +79,7	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -71,8 +79,7 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-716,7 +716,7	patches/dwm-colorbar-6.2.diff	/^@@ -716,7 +716,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-717,7 +718,7	patches/dwm-rainbowtags-6.2.diff	/^@@ -717,7 +718,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-719,9 +719,10	patches/dwm-activetagindicatorbar-6.2.diff	/^@@ -719,9 +719,10 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:dwm-a/dwm.c
-725,17 +725,17	patches/dwm-colorbar-6.2.diff	/^@@ -725,17 +725,17 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-732,12 +734,12	patches/dwm-barpadding-20211020-a786211.diff	/^@@ -732,12 +734,12 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-732,7 +829,7	patches/dwm-systray-6.3.diff	/^@@ -732,7 +829,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-74,6 +76,8	patches/dwm-centeredmaster-6.1.diff	/^@@ -74,6 +76,8 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-743,7 +840,7	patches/dwm-systray-6.3.diff	/^@@ -743,7 +840,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-780,8 +877,11	patches/dwm-systray-6.3.diff	/^@@ -780,8 +877,11 @@ expose(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-789,7 +807,8	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -789,7 +807,8 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-798,17 +817,40	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -798,17 +817,40 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-825,11 +867,17	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -825,11 +867,17 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-84,6 +85,9	patches/dwm-fullgaps-20200508-7b77734.diff	/^@@ -84,6 +85,9 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-840,7 +888,9	patches/dwm-systray-dsblocks-6.3.diff	/^@@ -840,7 +888,9 @@$/;"	h	modifiedFile:dwm-6.3-ori/dwm.c
-867,9 +967,17	patches/dwm-systray-6.3.diff	/^@@ -867,9 +967,17 @@ getatomprop(Client *c, Atom prop)$/;"	h	modifiedFile:a/dwm.c
-9,6 +9,7	patches/dwm-gaps-6.0.diff	/^@@ -9,6 +9,7 @@ static const char selbordercolor[]  = "#005577";$/;"	h	modifiedFile:a/config.def.h
-903,6 +1011,16	patches/dwm-systray-6.3.diff	/^@@ -903,6 +1011,16 @@ getstate(Window w)$/;"	h	modifiedFile:a/dwm.c
.c.o	dwm/Makefile	/^.c.o:$/;"	t
Arg	dwm/dwm.c	/^} Arg;$/;"	t	typeref:union:__anon80d5a0d5070a	file:
BETWEEN	dwm/util.h	/^#define BETWEEN(/;"	d
BUGS	dwm/dwm.1	/^.SH BUGS$/;"	s	title:DWM
BUTTONMASK	dwm/dwm.c	/^#define BUTTONMASK /;"	d	file:
Button	dwm/dwm.c	/^} Button;$/;"	t	typeref:struct:__anon80d5a0d50808	file:
CC	dwm/config.mk	/^CC = cc$/;"	m
CFLAGS	dwm/config.mk	/^CFLAGS   = -std=c99 -pedantic -Wall -Wno-deprecated-declarations -Os ${INCS} ${CPPFLAGS}$/;"	m
CLEANMASK	dwm/dwm.c	/^#define CLEANMASK(/;"	d	file:
CPPFLAGS	dwm/config.mk	/^CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\\"${VERSION}\\" /;"	m
CUSTOMIZATION	dwm/dwm.1	/^.SH CUSTOMIZATION$/;"	s	title:DWM
Client	dwm/dwm.c	/^struct Client {$/;"	s	file:
Client	dwm/dwm.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
ClkClientWin	dwm/dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon80d5a0d50603	file:
ClkLast	dwm/dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon80d5a0d50603	file:
ClkLtSymbol	dwm/dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon80d5a0d50603	file:
ClkRootWin	dwm/dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon80d5a0d50603	file:
ClkStatusText	dwm/dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon80d5a0d50603	file:
ClkTagBar	dwm/dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon80d5a0d50603	file:
ClkWinTitle	dwm/dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon80d5a0d50603	file:
Clr	dwm/drw.h	/^typedef XftColor Clr;$/;"	t	typeref:typename:XftColor
ColBg	dwm/drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon80d30d7f0203
ColBorder	dwm/drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon80d30d7f0203
ColFg	dwm/drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon80d30d7f0203
Cur	dwm/drw.h	/^} Cur;$/;"	t	typeref:struct:__anon80d30d7f0108
CurLast	dwm/dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon80d5a0d50103	file:
CurMove	dwm/dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon80d5a0d50103	file:
CurNormal	dwm/dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon80d5a0d50103	file:
CurResize	dwm/dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon80d5a0d50103	file:
DESCRIPTION	dwm/dwm.1	/^.SH DESCRIPTION$/;"	s	title:DWM
DWM	dwm/dwm.1	/^.TH DWM 1 dwm\\-VERSION$/;"	t
Drw	dwm/drw.h	/^} Drw;$/;"	t	typeref:struct:__anon80d30d7f0308
FREETYPEINC	dwm/config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPELIBS	dwm/config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
Fnt	dwm/drw.h	/^typedef struct Fnt {$/;"	s
Fnt	dwm/drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
HEIGHT	dwm/dwm.c	/^#define HEIGHT(/;"	d	file:
INCS	dwm/config.mk	/^INCS = -I${X11INC} -I${FREETYPEINC}$/;"	m
INTERSECT	dwm/dwm.c	/^#define INTERSECT(/;"	d	file:
ISSUES	dwm/dwm.1	/^.SH ISSUES$/;"	s	title:DWM
ISVISIBLE	dwm/dwm.c	/^#define ISVISIBLE(/;"	d	file:
ISVISIBLEONTAG	dwm/dwm.c	/^#define ISVISIBLEONTAG(/;"	d	file:
Key	dwm/dwm.c	/^} Key;$/;"	t	typeref:struct:__anon80d5a0d50908	file:
Keyboard commands	dwm/dwm.1	/^.SS Keyboard commands$/;"	S	section:DWM""USAGE
LDFLAGS	dwm/config.mk	/^LDFLAGS  = ${LIBS}$/;"	m
LENGTH	dwm/dwm.c	/^#define LENGTH(/;"	d	file:
LIBS	dwm/config.mk	/^LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS}$/;"	m
Layout	dwm/dwm.c	/^} Layout;$/;"	t	typeref:struct:__anon80d5a0d50a08	file:
MANPREFIX	dwm/config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MAX	dwm/util.h	/^#define MAX(/;"	d
MIN	dwm/util.h	/^#define MIN(/;"	d
MODKEY	dwm/config.def.h	/^#define MODKEY /;"	d
MODKEY	dwm/config.h	/^#define MODKEY /;"	d
MOUSEMASK	dwm/dwm.c	/^#define MOUSEMASK /;"	d	file:
Manager	dwm/dwm.c	/^enum { Manager, Xembed, XembedInfo, XLast }; \/* Xembed atoms *\/$/;"	e	enum:__anon80d5a0d50403	file:
Monitor	dwm/dwm.c	/^struct Monitor {$/;"	s	file:
Monitor	dwm/dwm.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
Mouse commands	dwm/dwm.1	/^.SS Mouse commands$/;"	S	section:DWM""USAGE
NAME	dwm/dwm.1	/^.SH NAME$/;"	s	title:DWM
NetActiveWindow	dwm/dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon80d5a0d50303	file:
NetClientList	dwm/dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon80d5a0d50303	file:
NetLast	dwm/dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon80d5a0d50303	file:
NetSupported	dwm/dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon80d5a0d50303	file:
NetSystemTray	dwm/dwm.c	/^       NetSystemTray, NetSystemTrayOP, NetSystemTrayOrientation, NetSystemTrayOrientationHorz,$/;"	e	enum:__anon80d5a0d50303	file:
NetSystemTrayOP	dwm/dwm.c	/^       NetSystemTray, NetSystemTrayOP, NetSystemTrayOrientation, NetSystemTrayOrientationHorz,$/;"	e	enum:__anon80d5a0d50303	file:
NetSystemTrayOrientation	dwm/dwm.c	/^       NetSystemTray, NetSystemTrayOP, NetSystemTrayOrientation, NetSystemTrayOrientationHorz,$/;"	e	enum:__anon80d5a0d50303	file:
NetSystemTrayOrientationHorz	dwm/dwm.c	/^       NetSystemTray, NetSystemTrayOP, NetSystemTrayOrientation, NetSystemTrayOrientationHorz,$/;"	e	enum:__anon80d5a0d50303	file:
NetWMCheck	dwm/dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon80d5a0d50303	file:
NetWMFullscreen	dwm/dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon80d5a0d50303	file:
NetWMName	dwm/dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon80d5a0d50303	file:
NetWMState	dwm/dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon80d5a0d50303	file:
NetWMWindowType	dwm/dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon80d5a0d50303	file:
NetWMWindowTypeDialog	dwm/dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon80d5a0d50303	file:
NumTags	dwm/dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	s	file:
OBJ	dwm/Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
OPTIONS	dwm/dwm.1	/^.SH OPTIONS$/;"	s	title:DWM
PREFIX	dwm/config.mk	/^PREFIX = \/usr\/local$/;"	m
Rule	dwm/dwm.c	/^} Rule;$/;"	t	typeref:struct:__anon80d5a0d50b08	file:
SEE ALSO	dwm/dwm.1	/^.SH SEE ALSO$/;"	s	title:DWM
SHCMD	dwm/config.def.h	/^#define SHCMD(/;"	d
SHCMD	dwm/config.h	/^#define SHCMD(/;"	d
SRC	dwm/Makefile	/^SRC = drw.c dwm.c util.c$/;"	m
SYNOPSIS	dwm/dwm.1	/^.SH SYNOPSIS$/;"	s	title:DWM
SYSTEM_TRAY_REQUEST_DOCK	dwm/dwm.c	/^#define SYSTEM_TRAY_REQUEST_DOCK /;"	d	file:
SchemeInfoNorm	dwm/dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, Scheme/;"	e	enum:__anon80d5a0d50203	file:
SchemeInfoSel	dwm/dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, Scheme/;"	e	enum:__anon80d5a0d50203	file:
SchemeNorm	dwm/dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, Scheme/;"	e	enum:__anon80d5a0d50203	file:
SchemeSel	dwm/dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, Scheme/;"	e	enum:__anon80d5a0d50203	file:
SchemeStatus	dwm/dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, Scheme/;"	e	enum:__anon80d5a0d50203	file:
SchemeTagsNorm	dwm/dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, Scheme/;"	e	enum:__anon80d5a0d50203	file:
SchemeTagsSel	dwm/dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, Scheme/;"	e	enum:__anon80d5a0d50203	file:
Status bar	dwm/dwm.1	/^.SS Status bar$/;"	S	section:DWM""USAGE
Systray	dwm/dwm.c	/^struct Systray {$/;"	s	file:
Systray	dwm/dwm.c	/^typedef struct Systray   Systray;$/;"	t	typeref:struct:Systray	file:
TAGKEYS	dwm/config.def.h	/^#define TAGKEYS(/;"	d
TAGKEYS	dwm/config.h	/^#define TAGKEYS(/;"	d
TAGMASK	dwm/dwm.c	/^#define TAGMASK /;"	d	file:
TEXTW	dwm/dwm.c	/^#define TEXTW(/;"	d	file:
USAGE	dwm/dwm.1	/^.SH USAGE$/;"	s	title:DWM
UTF_INVALID	dwm/drw.c	/^#define UTF_INVALID /;"	d	file:
UTF_SIZ	dwm/drw.c	/^#define UTF_SIZ /;"	d	file:
VERSION	dwm/config.mk	/^VERSION = 6.3$/;"	m
VERSION_MAJOR	dwm/dwm.c	/^#define VERSION_MAJOR /;"	d	file:
VERSION_MINOR	dwm/dwm.c	/^#define VERSION_MINOR /;"	d	file:
WIDTH	dwm/dwm.c	/^#define WIDTH(/;"	d	file:
WMDelete	dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon80d5a0d50503	file:
WMLast	dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon80d5a0d50503	file:
WMProtocols	dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon80d5a0d50503	file:
WMState	dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon80d5a0d50503	file:
WMTakeFocus	dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon80d5a0d50503	file:
X11INC	dwm/config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11LIB	dwm/config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
XEMBED_EMBEDDED_NOTIFY	dwm/dwm.c	/^#define XEMBED_EMBEDDED_NOTIFY /;"	d	file:
XEMBED_EMBEDDED_VERSION	dwm/dwm.c	/^#define XEMBED_EMBEDDED_VERSION /;"	d	file:
XEMBED_FOCUS_IN	dwm/dwm.c	/^#define XEMBED_FOCUS_IN /;"	d	file:
XEMBED_MAPPED	dwm/dwm.c	/^#define XEMBED_MAPPED /;"	d	file:
XEMBED_MODALITY_ON	dwm/dwm.c	/^#define XEMBED_MODALITY_ON /;"	d	file:
XEMBED_WINDOW_ACTIVATE	dwm/dwm.c	/^#define XEMBED_WINDOW_ACTIVATE /;"	d	file:
XEMBED_WINDOW_DEACTIVATE	dwm/dwm.c	/^#define XEMBED_WINDOW_DEACTIVATE /;"	d	file:
XINERAMAFLAGS	dwm/config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMALIBS	dwm/config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
XLast	dwm/dwm.c	/^enum { Manager, Xembed, XembedInfo, XLast }; \/* Xembed atoms *\/$/;"	e	enum:__anon80d5a0d50403	file:
Xembed	dwm/dwm.c	/^enum { Manager, Xembed, XembedInfo, XLast }; \/* Xembed atoms *\/$/;"	e	enum:__anon80d5a0d50403	file:
XembedInfo	dwm/dwm.c	/^enum { Manager, Xembed, XembedInfo, XLast }; \/* Xembed atoms *\/$/;"	e	enum:__anon80d5a0d50403	file:
__anon80d30d7a0103	dwm/drw.c	/^	enum { nomatches_len = 64 };$/;"	g	function:drw_text	file:
__anon80d30d7a0208	dwm/drw.c	/^	static struct { long codepoint[nomatches_len]; unsigned int idx; } nomatches;$/;"	s	function:drw_text	file:
__anon80d30d7f0108	dwm/drw.h	/^typedef struct {$/;"	s
__anon80d30d7f0203	dwm/drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	g
__anon80d30d7f0308	dwm/drw.h	/^typedef struct {$/;"	s
__anon80d5a0d50103	dwm/dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	g	file:
__anon80d5a0d50203	dwm/dwm.c	/^enum { SchemeNorm, SchemeSel, SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, Scheme/;"	g	file:
__anon80d5a0d50303	dwm/dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	g	file:
__anon80d5a0d50403	dwm/dwm.c	/^enum { Manager, Xembed, XembedInfo, XLast }; \/* Xembed atoms *\/$/;"	g	file:
__anon80d5a0d50503	dwm/dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	g	file:
__anon80d5a0d50603	dwm/dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	g	file:
__anon80d5a0d5070a	dwm/dwm.c	/^typedef union {$/;"	u	file:
__anon80d5a0d50808	dwm/dwm.c	/^typedef struct {$/;"	s	file:
__anon80d5a0d50908	dwm/dwm.c	/^typedef struct {$/;"	s	file:
__anon80d5a0d50a08	dwm/dwm.c	/^typedef struct {$/;"	s	file:
__anon80d5a0d50b08	dwm/dwm.c	/^typedef struct {$/;"	s	file:
a/config.def.h	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-barpadding-20211020-a786211.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-centeredmaster-6.1.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-colorbar-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-cool-autostart-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-fullgaps-20200508-7b77734.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-gaps-6.0.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-rainbowtags-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-systray-6.3.diff	/^--- a\/config.def.h$/;"	m
a/dwm.1	patches/dwm-autostart-20210120-cb3f58a.diff	/^--- a\/dwm.1$/;"	m
a/dwm.1	patches/dwm-fullgaps-20200508-7b77734.diff	/^--- a\/dwm.1$/;"	m
a/dwm.c	patches/dwm-anybar-polybar-tray-fix-20200810-bb2e722.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-attachaside-6.3.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-autostart-20210120-cb3f58a.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-barpadding-20211020-a786211.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-centeredmaster-6.1.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-colorbar-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-cool-autostart-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-fullgaps-20200508-7b77734.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-gaps-6.0.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-rainbowtags-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-systray-6.3.diff	/^--- a\/dwm.c$/;"	m
all	dwm/Makefile	/^all: options dwm$/;"	t
applyrules	dwm/dwm.c	/^applyrules(Client *c)$/;"	f	typeref:typename:void
applysizehints	dwm/dwm.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int
arg	dwm/dwm.c	/^	const Arg arg;$/;"	m	struct:__anon80d5a0d50808	typeref:typename:const Arg	file:
arg	dwm/dwm.c	/^	const Arg arg;$/;"	m	struct:__anon80d5a0d50908	typeref:typename:const Arg	file:
arrange	dwm/dwm.c	/^	void (*arrange)(Monitor *);$/;"	m	struct:__anon80d5a0d50a08	typeref:typename:void (*)(Monitor *)	file:
arrange	dwm/dwm.c	/^arrange(Monitor *m)$/;"	f	typeref:typename:void
arrangemon	dwm/dwm.c	/^arrangemon(Monitor *m)$/;"	f	typeref:typename:void
attach	dwm/dwm.c	/^attach(Client *c)$/;"	f	typeref:typename:void
attachaside	dwm/dwm.c	/^attachaside(Client *c) {$/;"	f	typeref:typename:void
attachstack	dwm/dwm.c	/^attachstack(Client *c)$/;"	f	typeref:typename:void
autostart	dwm/config.def.h	/^static const char *const autostart[] = {$/;"	v	typeref:typename:const char * const[]
autostart	dwm/config.h	/^static const char *const autostart[] = {$/;"	v	typeref:typename:const char * const[]
autostart_exec	dwm/dwm.c	/^autostart_exec() {$/;"	f	typeref:typename:void	file:
autostart_len	dwm/dwm.c	/^static size_t autostart_len;$/;"	v	typeref:typename:size_t	file:
autostart_pids	dwm/dwm.c	/^static pid_t *autostart_pids;$/;"	v	typeref:typename:pid_t *	file:
barwin	dwm/dwm.c	/^	Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:
baseh	dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
basew	dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
bh	dwm/dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
blw	dwm/dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
borderpx	dwm/config.def.h	/^static const unsigned int borderpx  = 3;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
borderpx	dwm/config.h	/^static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
broken	dwm/dwm.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
button	dwm/dwm.c	/^	unsigned int button;$/;"	m	struct:__anon80d5a0d50808	typeref:typename:unsigned int	file:
buttonpress	dwm/dwm.c	/^buttonpress(XEvent *e)$/;"	f	typeref:typename:void
buttons	dwm/config.def.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
buttons	dwm/config.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
bw	dwm/dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
by	dwm/dwm.c	/^	int by;               \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
centeredfloatingmaster	dwm/dwm.c	/^centeredfloatingmaster(Monitor *m)$/;"	f	typeref:typename:void
centeredmaster	dwm/dwm.c	/^centeredmaster(Monitor *m)$/;"	f	typeref:typename:void
checkotherwm	dwm/dwm.c	/^checkotherwm(void)$/;"	f	typeref:typename:void
class	dwm/dwm.c	/^	const char *class;$/;"	m	struct:__anon80d5a0d50b08	typeref:typename:const char *	file:
clean	dwm/Makefile	/^clean:$/;"	t
cleanup	dwm/dwm.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanupmon	dwm/dwm.c	/^cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void
click	dwm/dwm.c	/^	unsigned int click;$/;"	m	struct:__anon80d5a0d50808	typeref:typename:unsigned int	file:
clientmessage	dwm/dwm.c	/^clientmessage(XEvent *e)$/;"	f	typeref:typename:void
clients	dwm/dwm.c	/^	Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
codepoint	dwm/drw.c	/^	static struct { long codepoint[nomatches_len]; unsigned int idx; } nomatches;$/;"	m	struct:drw_text::__anon80d30d7a0208	typeref:typename:long[]	file:
col_cyan	dwm/config.def.h	/^static const char col_cyan[]        = "#770033";$/;"	v	typeref:typename:const char[]
col_cyan	dwm/config.h	/^static const char col_cyan[]        = "#770033";$/;"	v	typeref:typename:const char[]
col_gray1	dwm/config.def.h	/^static const char col_gray1[]       = "#222222";$/;"	v	typeref:typename:const char[]
col_gray1	dwm/config.h	/^static const char col_gray1[]       = "#222222";$/;"	v	typeref:typename:const char[]
col_gray2	dwm/config.def.h	/^static const char col_gray2[]       = "#444444";$/;"	v	typeref:typename:const char[]
col_gray2	dwm/config.h	/^static const char col_gray2[]       = "#444444";$/;"	v	typeref:typename:const char[]
col_gray3	dwm/config.def.h	/^static const char col_gray3[]       = "#bbbbbb";$/;"	v	typeref:typename:const char[]
col_gray3	dwm/config.h	/^static const char col_gray3[]       = "#bbbbbb";$/;"	v	typeref:typename:const char[]
col_gray4	dwm/config.def.h	/^static const char col_gray4[]       = "#eeeeee";$/;"	v	typeref:typename:const char[]
col_gray4	dwm/config.h	/^static const char col_gray4[]       = "#eeeeee";$/;"	v	typeref:typename:const char[]
colors	colors-wal-dwm.h	/^static const char *colors[][3]      = {{$/;"	v	typeref:typename:const char * [][3]
config.h	dwm/Makefile	/^config.h:$/;"	t
configure	dwm/dwm.c	/^configure(Client *c)$/;"	f	typeref:typename:void
configurenotify	dwm/dwm.c	/^configurenotify(XEvent *e)$/;"	f	typeref:typename:void
configurerequest	dwm/dwm.c	/^configurerequest(XEvent *e)$/;"	f	typeref:typename:void
createmon	dwm/dwm.c	/^createmon(void)$/;"	f	typeref:typename:Monitor *
cursor	dwm/drw.h	/^	Cursor cursor;$/;"	m	struct:__anon80d30d7f0108	typeref:typename:Cursor
cursor	dwm/dwm.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
destroynotify	dwm/dwm.c	/^destroynotify(XEvent *e)$/;"	f	typeref:typename:void
detach	dwm/dwm.c	/^detach(Client *c)$/;"	f	typeref:typename:void
detachstack	dwm/dwm.c	/^detachstack(Client *c)$/;"	f	typeref:typename:void
die	dwm/util.c	/^die(const char *fmt, ...) {$/;"	f	typeref:typename:void
dirtomon	dwm/dwm.c	/^dirtomon(int dir)$/;"	f	typeref:typename:Monitor *
dist	dwm/Makefile	/^dist: clean$/;"	t
dmenucmd	dwm/config.def.h	/^static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-l", "15", "-F/;"	v	typeref:typename:const char * []
dmenucmd	dwm/config.h	/^static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-l", "15", "-F/;"	v	typeref:typename:const char * []
dmenufont	dwm/config.def.h	/^static const char dmenufont[]       = "Fira Code Nerd Font Complete:size=14";$/;"	v	typeref:typename:const char[]
dmenufont	dwm/config.h	/^static const char dmenufont[]       = "Fira Code Nerd Font Complete:size=14";$/;"	v	typeref:typename:const char[]
dmenumon	dwm/config.def.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dmenumon	dwm/config.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dpy	dwm/drw.h	/^	Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *
dpy	dwm/drw.h	/^	Display *dpy;$/;"	m	struct:__anon80d30d7f0308	typeref:typename:Display *
dpy	dwm/dwm.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
drawable	dwm/drw.h	/^	Drawable drawable;$/;"	m	struct:__anon80d30d7f0308	typeref:typename:Drawable
drawbar	dwm/dwm.c	/^drawbar(Monitor *m)$/;"	f	typeref:typename:void
drawbars	dwm/dwm.c	/^drawbars(void)$/;"	f	typeref:typename:void
drw	dwm/dwm.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw_clr_create	dwm/drw.c	/^drw_clr_create(Drw *drw, Clr *dest, const char *clrname)$/;"	f	typeref:typename:void
drw_create	dwm/drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h)$/;"	f	typeref:typename:Drw *
drw_cur_create	dwm/drw.c	/^drw_cur_create(Drw *drw, int shape)$/;"	f	typeref:typename:Cur *
drw_cur_free	dwm/drw.c	/^drw_cur_free(Drw *drw, Cur *cursor)$/;"	f	typeref:typename:void
drw_font_getexts	dwm/drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h/;"	f	typeref:typename:void
drw_fontset_create	dwm/drw.c	/^drw_fontset_create(Drw* drw, const char *fonts[], size_t fontcount)$/;"	f	typeref:typename:Fnt *
drw_fontset_free	dwm/drw.c	/^drw_fontset_free(Fnt *font)$/;"	f	typeref:typename:void
drw_fontset_getwidth	dwm/drw.c	/^drw_fontset_getwidth(Drw *drw, const char *text)$/;"	f	typeref:typename:unsigned int
drw_fontset_getwidth_clamp	dwm/drw.c	/^drw_fontset_getwidth_clamp(Drw *drw, const char *text, unsigned int n)$/;"	f	typeref:typename:unsigned int
drw_free	dwm/drw.c	/^drw_free(Drw *drw)$/;"	f	typeref:typename:void
drw_map	dwm/drw.c	/^drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_rect	dwm/drw.c	/^drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)$/;"	f	typeref:typename:void
drw_resize	dwm/drw.c	/^drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_scm_create	dwm/drw.c	/^drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)$/;"	f	typeref:typename:Clr *
drw_setfontset	dwm/drw.c	/^drw_setfontset(Drw *drw, Fnt *set)$/;"	f	typeref:typename:void
drw_setscheme	dwm/drw.c	/^drw_setscheme(Drw *drw, Clr *scm)$/;"	f	typeref:typename:void
drw_text	dwm/drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char */;"	f	typeref:typename:int
dwm	dwm/Makefile	/^dwm: ${OBJ}$/;"	t
dwm-6.3-ori/config.def.h	patches/dwm-systray-dsblocks-6.3.diff	/^--- dwm-6.3-ori\/config.def.h	2022-02-16 00:26:13.967478771 +0530$/;"	m
dwm-6.3-ori/dwm.c	patches/dwm-systray-dsblocks-6.3.diff	/^--- dwm-6.3-ori\/dwm.c	2022-02-16 00:26:13.970812142 +0530$/;"	m
dwm-a/dwm.c	patches/dwm-activetagindicatorbar-6.2.diff	/^--- dwm-a\/dwm.c	2019-02-02 06:55:28.000000000 -0600$/;"	m
ecalloc	dwm/util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
enternotify	dwm/dwm.c	/^enternotify(XEvent *e)$/;"	f	typeref:typename:void
expose	dwm/dwm.c	/^expose(XEvent *e)$/;"	f	typeref:typename:void
f	dwm/dwm.c	/^	float f;$/;"	m	union:__anon80d5a0d5070a	typeref:typename:float	file:
focus	dwm/dwm.c	/^focus(Client *c)$/;"	f	typeref:typename:void
focusin	dwm/dwm.c	/^focusin(XEvent *e)$/;"	f	typeref:typename:void
focusmon	dwm/dwm.c	/^focusmon(const Arg *arg)$/;"	f	typeref:typename:void
focusstack	dwm/dwm.c	/^focusstack(const Arg *arg)$/;"	f	typeref:typename:void
fonts	dwm/config.def.h	/^static const char *fonts[]          = { "Fira Code Nerd Font Complete:size=12", "Symbola:size=12/;"	v	typeref:typename:const char * []
fonts	dwm/config.h	/^static const char *fonts[]          = { "Fira Code Nerd Font Complete:size=12", "Symbola:size=12/;"	v	typeref:typename:const char * []
fonts	dwm/drw.h	/^	Fnt *fonts;$/;"	m	struct:__anon80d30d7f0308	typeref:typename:Fnt *
func	dwm/dwm.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon80d5a0d50908	typeref:typename:void (*)(const Arg *)	file:
func	dwm/dwm.c	/^	void (*func)(const Arg *arg);$/;"	m	struct:__anon80d5a0d50808	typeref:typename:void (*)(const Arg * arg)	file:
gappx	dwm/config.def.h	/^static const unsigned int gappx     = 10;        \/* gap pixel between windows *\/$/;"	v	typeref:typename:const unsigned int
gappx	dwm/config.h	/^static const unsigned int gappx     = 10;        \/* gap pixel between windows *\/$/;"	v	typeref:typename:const unsigned int
gappx	dwm/dwm.c	/^	int gappx;            \/* gaps between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gc	dwm/drw.h	/^	GC gc;$/;"	m	struct:__anon80d30d7f0308	typeref:typename:GC
getatomprop	dwm/dwm.c	/^getatomprop(Client *c, Atom prop)$/;"	f	typeref:typename:Atom
getrootptr	dwm/dwm.c	/^getrootptr(int *x, int *y)$/;"	f	typeref:typename:int
getstate	dwm/dwm.c	/^getstate(Window w)$/;"	f	typeref:typename:long
getsystraywidth	dwm/dwm.c	/^getsystraywidth()$/;"	f	typeref:typename:unsigned int
gettextprop	dwm/dwm.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int
grabbuttons	dwm/dwm.c	/^grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void
grabkeys	dwm/dwm.c	/^grabkeys(void)$/;"	f	typeref:typename:void
h	dwm/drw.h	/^	unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int
h	dwm/drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon80d30d7f0308	typeref:typename:unsigned int
h	dwm/dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
handler	dwm/dwm.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
hintsvalid	dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
i	dwm/dwm.c	/^	int i;$/;"	m	union:__anon80d5a0d5070a	typeref:typename:int	file:
icons	dwm/dwm.c	/^	Client *icons;$/;"	m	struct:Systray	typeref:typename:Client *	file:
idx	dwm/drw.c	/^	static struct { long codepoint[nomatches_len]; unsigned int idx; } nomatches;$/;"	m	struct:drw_text::__anon80d30d7a0208	typeref:typename:unsigned int	file:
inch	dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
incnmaster	dwm/dwm.c	/^incnmaster(const Arg *arg)$/;"	f	typeref:typename:void
incw	dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
install	dwm/Makefile	/^install: all$/;"	t
instance	dwm/dwm.c	/^	const char *instance;$/;"	m	struct:__anon80d5a0d50b08	typeref:typename:const char *	file:
isfixed	dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	dwm/dwm.c	/^	int isfloating;$/;"	m	struct:__anon80d5a0d50b08	typeref:typename:int	file:
isfullscreen	dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isuniquegeom	dwm/dwm.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	typeref:typename:int	file:
isurgent	dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
keypress	dwm/dwm.c	/^keypress(XEvent *e)$/;"	f	typeref:typename:void
keys	dwm/config.def.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	dwm/config.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keysym	dwm/dwm.c	/^	KeySym keysym;$/;"	m	struct:__anon80d5a0d50908	typeref:typename:KeySym	file:
killclient	dwm/dwm.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void
killdwm	dwm/config.def.h	/^static const char *killdwm[]  = { "pkill", "dwm", NULL };$/;"	v	typeref:typename:const char * []
killdwm	dwm/config.h	/^static const char *killdwm[]  = { "pkill", "dwm", NULL };$/;"	v	typeref:typename:const char * []
layouts	dwm/config.def.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
layouts	dwm/config.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
limitexceeded	dwm/dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:
lockfullscreen	dwm/config.def.h	/^static const int lockfullscreen = 1; \/* 1 will force focus on the fullscreen window *\/$/;"	v	typeref:typename:const int
lockfullscreen	dwm/config.h	/^static const int lockfullscreen = 1; \/* 1 will force focus on the fullscreen window *\/$/;"	v	typeref:typename:const int
lrpad	dwm/dwm.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lt	dwm/dwm.c	/^	const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:
ltsymbol	dwm/dwm.c	/^	char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
main	dwm/dwm.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	dwm/transient.c	/^int main(void) {$/;"	f	typeref:typename:int
main	scripts/statusbar/getProc.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
manage	dwm/dwm.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void
mappingnotify	dwm/dwm.c	/^mappingnotify(XEvent *e)$/;"	f	typeref:typename:void
maprequest	dwm/dwm.c	/^maprequest(XEvent *e)$/;"	f	typeref:typename:void
mask	dwm/dwm.c	/^	unsigned int mask;$/;"	m	struct:__anon80d5a0d50808	typeref:typename:unsigned int	file:
maxa	dwm/dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
maxh	dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
maxw	dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
mfact	dwm/config.def.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	dwm/config.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	dwm/dwm.c	/^	float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:
mh	dwm/dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mina	dwm/dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
minh	dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
minw	dwm/dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
mod	dwm/dwm.c	/^	unsigned int mod;$/;"	m	struct:__anon80d5a0d50908	typeref:typename:unsigned int	file:
mon	dwm/dwm.c	/^	Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:
monitor	dwm/dwm.c	/^	int monitor;$/;"	m	struct:__anon80d5a0d50b08	typeref:typename:int	file:
monocle	dwm/dwm.c	/^monocle(Monitor *m)$/;"	f	typeref:typename:void
mons	dwm/dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
motionnotify	dwm/dwm.c	/^motionnotify(XEvent *e)$/;"	f	typeref:typename:void
movemouse	dwm/dwm.c	/^movemouse(const Arg *arg)$/;"	f	typeref:typename:void
mw	dwm/dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mx	dwm/dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my	dwm/dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
name	dwm/dwm.c	/^	char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:
netatom	dwm/dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast], xatom[XLast];$/;"	v	typeref:typename:Atom[]	file:
neverfocus	dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
next	dwm/drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *
next	dwm/dwm.c	/^	Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:
next	dwm/dwm.c	/^	Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:
nexttagged	dwm/dwm.c	/^nexttagged(Client *c) {$/;"	f	typeref:typename:Client *
nexttiled	dwm/dwm.c	/^nexttiled(Client *c)$/;"	f	typeref:typename:Client *
nmaster	dwm/config.def.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	dwm/config.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	dwm/dwm.c	/^	int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:
nomatches_len	dwm/drw.c	/^	enum { nomatches_len = 64 };$/;"	e	enum:drw_text::__anon80d30d7a0103	file:
norm_bg	colors-wal-dwm.h	/^static const char norm_bg[] = "{color0}";$/;"	v	typeref:typename:const char[]
norm_border	colors-wal-dwm.h	/^static const char norm_border[] = "{color8}";$/;"	v	typeref:typename:const char[]
norm_fg	colors-wal-dwm.h	/^static const char norm_fg[] = "{color15}";$/;"	v	typeref:typename:const char[]
num	dwm/dwm.c	/^	int num;$/;"	m	struct:Monitor	typeref:typename:int	file:
numlockmask	dwm/dwm.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
oldbw	dwm/dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
oldh	dwm/dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldstate	dwm/dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
oldw	dwm/dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldx	dwm/dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldy	dwm/dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
options	dwm/Makefile	/^options:$/;"	t
pattern	dwm/drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *
pop	dwm/dwm.c	/^pop(Client *c)$/;"	f	typeref:typename:void
propertynotify	dwm/dwm.c	/^propertynotify(XEvent *e)$/;"	f	typeref:typename:void
quit	dwm/dwm.c	/^quit(const Arg *arg)$/;"	f	typeref:typename:void
recttomon	dwm/dwm.c	/^recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *
removesystrayicon	dwm/dwm.c	/^removesystrayicon(Client *i)$/;"	f	typeref:typename:void
resize	dwm/dwm.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void
resizebarwin	dwm/dwm.c	/^resizebarwin(Monitor *m) {$/;"	f	typeref:typename:void
resizeclient	dwm/dwm.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void
resizehints	dwm/config.def.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizehints	dwm/config.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizemouse	dwm/dwm.c	/^resizemouse(const Arg *arg)$/;"	f	typeref:typename:void
resizerequest	dwm/dwm.c	/^resizerequest(XEvent *e)$/;"	f	typeref:typename:void
restack	dwm/dwm.c	/^restack(Monitor *m)$/;"	f	typeref:typename:void
root	dwm/drw.h	/^	Window root;$/;"	m	struct:__anon80d30d7f0308	typeref:typename:Window
root	dwm/dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
rules	dwm/config.def.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
rules	dwm/config.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
run	dwm/dwm.c	/^run(void)$/;"	f	typeref:typename:void
running	dwm/dwm.c	/^static int running = 1;$/;"	v	typeref:typename:int	file:
scan	dwm/dwm.c	/^scan(void)$/;"	f	typeref:typename:void
scheme	dwm/drw.h	/^	Clr *scheme;$/;"	m	struct:__anon80d30d7f0308	typeref:typename:Clr *
scheme	dwm/dwm.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
screen	dwm/drw.h	/^	int screen;$/;"	m	struct:__anon80d30d7f0308	typeref:typename:int
screen	dwm/dwm.c	/^static int screen;$/;"	v	typeref:typename:int	file:
screenshot	dwm/config.def.h	/^static const char *screenshot[]  = { "flameshot", "gui", NULL };$/;"	v	typeref:typename:const char * []
screenshot	dwm/config.h	/^static const char *screenshot[]  = { "flameshot", "gui", NULL };$/;"	v	typeref:typename:const char * []
sel	dwm/dwm.c	/^	Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
sel_bg	colors-wal-dwm.h	/^static const char sel_bg[] = "{color2}";$/;"	v	typeref:typename:const char[]
sel_border	colors-wal-dwm.h	/^static const char sel_border[] = "{color15}";$/;"	v	typeref:typename:const char[]
sel_fg	colors-wal-dwm.h	/^static const char sel_fg[] = "{color15}";$/;"	v	typeref:typename:const char[]
sellt	dwm/dwm.c	/^	unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
selmon	dwm/dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
seltags	dwm/dwm.c	/^	unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
sendevent	dwm/dwm.c	/^sendevent(Window w, Atom proto, int mask, long d0, long d1, long d2, long d3, long d4)$/;"	f	typeref:typename:int
sendmon	dwm/dwm.c	/^sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void
setclientstate	dwm/dwm.c	/^setclientstate(Client *c, long state)$/;"	f	typeref:typename:void
setfocus	dwm/dwm.c	/^setfocus(Client *c)$/;"	f	typeref:typename:void
setfullscreen	dwm/dwm.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void
setgaps	dwm/dwm.c	/^setgaps(const Arg *arg)$/;"	f	typeref:typename:void
setlayout	dwm/dwm.c	/^setlayout(const Arg *arg)$/;"	f	typeref:typename:void
setmfact	dwm/dwm.c	/^setmfact(const Arg *arg)$/;"	f	typeref:typename:void
setup	dwm/dwm.c	/^setup(void)$/;"	f	typeref:typename:void
seturgent	dwm/dwm.c	/^seturgent(Client *c, int urg)$/;"	f	typeref:typename:void
sh	dwm/dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
showbar	dwm/config.def.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	dwm/config.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	dwm/dwm.c	/^	int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
showhide	dwm/dwm.c	/^showhide(Client *c)$/;"	f	typeref:typename:void
showsystray	dwm/config.def.h	/^static const int showsystray        = 1;     \/* 0 means no systray *\/$/;"	v	typeref:typename:const int
showsystray	dwm/config.h	/^static const int showsystray        = 1;     \/* 0 means no systray *\/$/;"	v	typeref:typename:const int
sidepad	dwm/config.def.h	/^static const int sidepad            = 5;       \/* horizontal padding of bar *\/$/;"	v	typeref:typename:const int
sidepad	dwm/config.h	/^static const int sidepad            = 5;       \/* horizontal padding of bar *\/$/;"	v	typeref:typename:const int
sigchld	dwm/dwm.c	/^sigchld(int unused)$/;"	f	typeref:typename:void
snap	dwm/config.def.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snap	dwm/config.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snext	dwm/dwm.c	/^	Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:
sp	dwm/dwm.c	/^static int sp;               \/* side padding for bar *\/$/;"	v	typeref:typename:int	file:
spawn	dwm/dwm.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void
stack	dwm/dwm.c	/^	Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
stext	dwm/dwm.c	/^static char stext[256];$/;"	v	typeref:typename:char[256]	file:
strremove	scripts/statusbar/getProc.c	/^char *strremove(char *str, const char *sub) {$/;"	f	typeref:typename:char *
sw	dwm/dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
symbol	dwm/dwm.c	/^	const char *symbol;$/;"	m	struct:__anon80d5a0d50a08	typeref:typename:const char *	file:
systray	dwm/dwm.c	/^static Systray *systray = NULL;$/;"	v	typeref:typename:Systray *	file:
systrayonleft	dwm/config.def.h	/^static const unsigned int systrayonleft = 0;   	\/* 0: systray in the right corner, >0: systray /;"	v	typeref:typename:const unsigned int
systrayonleft	dwm/config.h	/^static const unsigned int systrayonleft = 0;   	\/* 0: systray in the right corner, >0: systray /;"	v	typeref:typename:const unsigned int
systraypinning	dwm/config.def.h	/^static const unsigned int systraypinning = 0;   \/* 0: sloppy systray follows selected monitor, /;"	v	typeref:typename:const unsigned int
systraypinning	dwm/config.h	/^static const unsigned int systraypinning = 0;   \/* 0: sloppy systray follows selected monitor, /;"	v	typeref:typename:const unsigned int
systraypinningfailfirst	dwm/config.def.h	/^static const int systraypinningfailfirst = 1;   \/* 1: if pinning fails, display systray on the /;"	v	typeref:typename:const int
systraypinningfailfirst	dwm/config.h	/^static const int systraypinningfailfirst = 1;   \/* 1: if pinning fails, display systray on the /;"	v	typeref:typename:const int
systrayspacing	dwm/config.def.h	/^static const unsigned int systrayspacing = 2;   \/* systray spacing *\/$/;"	v	typeref:typename:const unsigned int
systrayspacing	dwm/config.h	/^static const unsigned int systrayspacing = 9;   \/* systray spacing *\/$/;"	v	typeref:typename:const unsigned int
systraytomon	dwm/dwm.c	/^systraytomon(Monitor *m) {$/;"	f	typeref:typename:Monitor *
tag	dwm/dwm.c	/^tag(const Arg *arg)$/;"	f	typeref:typename:void
tagmon	dwm/dwm.c	/^tagmon(const Arg *arg)$/;"	f	typeref:typename:void
tags	dwm/config.def.h	/^static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tags	dwm/config.h	/^static const char *tags[] = { "", "", "", "", "5", "6", "7", "", "" };$/;"	v	typeref:typename:const char * []
tags	dwm/dwm.c	/^	unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:
tags	dwm/dwm.c	/^	unsigned int tags;$/;"	m	struct:__anon80d5a0d50b08	typeref:typename:unsigned int	file:
tagscheme	dwm/dwm.c	/^static Clr **tagscheme;$/;"	v	typeref:typename:Clr **	file:
tagsel	dwm/config.def.h	/^static const char *tagsel[][2] = {$/;"	v	typeref:typename:const char * [][2]
tagsel	dwm/config.h	/^static const char *tagsel[][2] = {$/;"	v	typeref:typename:const char * [][2]
tagset	dwm/dwm.c	/^	unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:
termcmd	dwm/config.def.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
termcmd	dwm/config.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
tile	dwm/dwm.c	/^tile(Monitor *m)$/;"	f	typeref:typename:void
title	dwm/dwm.c	/^	const char *title;$/;"	m	struct:__anon80d5a0d50b08	typeref:typename:const char *	file:
togglebar	dwm/dwm.c	/^togglebar(const Arg *arg)$/;"	f	typeref:typename:void
togglefloating	dwm/dwm.c	/^togglefloating(const Arg *arg)$/;"	f	typeref:typename:void
toggletag	dwm/dwm.c	/^toggletag(const Arg *arg)$/;"	f	typeref:typename:void
toggleview	dwm/dwm.c	/^toggleview(const Arg *arg)$/;"	f	typeref:typename:void
topbar	dwm/config.def.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	dwm/config.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	dwm/dwm.c	/^	int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
ui	dwm/dwm.c	/^	unsigned int ui;$/;"	m	union:__anon80d5a0d5070a	typeref:typename:unsigned int	file:
unfocus	dwm/dwm.c	/^unfocus(Client *c, int setfocus)$/;"	f	typeref:typename:void
uninstall	dwm/Makefile	/^uninstall:$/;"	t
unmanage	dwm/dwm.c	/^unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void
unmapnotify	dwm/dwm.c	/^unmapnotify(XEvent *e)$/;"	f	typeref:typename:void
updatebarpos	dwm/dwm.c	/^updatebarpos(Monitor *m)$/;"	f	typeref:typename:void
updatebars	dwm/dwm.c	/^updatebars(void)$/;"	f	typeref:typename:void
updateclientlist	dwm/dwm.c	/^updateclientlist()$/;"	f	typeref:typename:void
updategeom	dwm/dwm.c	/^updategeom(void)$/;"	f	typeref:typename:int
updatenumlockmask	dwm/dwm.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void
updatesizehints	dwm/dwm.c	/^updatesizehints(Client *c)$/;"	f	typeref:typename:void
updatestatus	dwm/dwm.c	/^updatestatus(void)$/;"	f	typeref:typename:void
updatesystray	dwm/dwm.c	/^updatesystray(void)$/;"	f	typeref:typename:void
updatesystrayicongeom	dwm/dwm.c	/^updatesystrayicongeom(Client *i, int w, int h)$/;"	f	typeref:typename:void
updatesystrayiconstate	dwm/dwm.c	/^updatesystrayiconstate(Client *i, XPropertyEvent *ev)$/;"	f	typeref:typename:void
updatetitle	dwm/dwm.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void
updatewindowtype	dwm/dwm.c	/^updatewindowtype(Client *c)$/;"	f	typeref:typename:void
updatewmhints	dwm/dwm.c	/^updatewmhints(Client *c)$/;"	f	typeref:typename:void
urg_bg	colors-wal-dwm.h	/^static const char urg_bg[] = "{color1}";$/;"	v	typeref:typename:const char[]
urg_border	colors-wal-dwm.h	/^static const char urg_border[] = "{color1}";$/;"	v	typeref:typename:const char[]
urg_fg	colors-wal-dwm.h	/^static const char urg_fg[] = "{color15}";$/;"	v	typeref:typename:const char[]
utf8decode	dwm/drw.c	/^utf8decode(const char *c, long *u, size_t clen)$/;"	f	typeref:typename:size_t	file:
utf8decodebyte	dwm/drw.c	/^utf8decodebyte(const char c, size_t *i)$/;"	f	typeref:typename:long	file:
utf8validate	dwm/drw.c	/^utf8validate(long *u, size_t i)$/;"	f	typeref:typename:size_t	file:
utfbyte	dwm/drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmask	dwm/drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmax	dwm/drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:const long[]	file:
utfmin	dwm/drw.c	/^static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:const long[]	file:
v	dwm/dwm.c	/^	const void *v;$/;"	m	union:__anon80d5a0d5070a	typeref:typename:const void *	file:
vertpad	dwm/config.def.h	/^static const int vertpad            = 5;       \/* vertical padding of bar *\/$/;"	v	typeref:typename:const int
vertpad	dwm/config.h	/^static const int vertpad            = 5;       \/* vertical padding of bar *\/$/;"	v	typeref:typename:const int
view	dwm/dwm.c	/^view(const Arg *arg)$/;"	f	typeref:typename:void
vp	dwm/dwm.c	/^static int vp;               \/* vertical padding for bar *\/$/;"	v	typeref:typename:int	file:
w	dwm/drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon80d30d7f0308	typeref:typename:unsigned int
w	dwm/dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
wh	dwm/dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
win	dwm/dwm.c	/^	Window win;$/;"	m	struct:Client	typeref:typename:Window	file:
win	dwm/dwm.c	/^	Window win;$/;"	m	struct:Systray	typeref:typename:Window	file:
wintoclient	dwm/dwm.c	/^wintoclient(Window w)$/;"	f	typeref:typename:Client *
wintomon	dwm/dwm.c	/^wintomon(Window w)$/;"	f	typeref:typename:Monitor *
wintosystrayicon	dwm/dwm.c	/^wintosystrayicon(Window w) {$/;"	f	typeref:typename:Client *
wmatom	dwm/dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast], xatom[XLast];$/;"	v	typeref:typename:Atom[]	file:
wmcheckwin	dwm/dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
ww	dwm/dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wx	dwm/dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wy	dwm/dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
x	dwm/dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
xatom	dwm/dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast], xatom[XLast];$/;"	v	typeref:typename:Atom[]	file:
xerror	dwm/dwm.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrordummy	dwm/dwm.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorstart	dwm/dwm.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorxlib	dwm/dwm.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xfont	dwm/drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *
xfont_create	dwm/drw.c	/^xfont_create(Drw *drw, const char *fontname, FcPattern *fontpattern)$/;"	f	typeref:typename:Fnt *	file:
xfont_free	dwm/drw.c	/^xfont_free(Fnt *font)$/;"	f	typeref:typename:void	file:
y	dwm/dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
zoom	dwm/dwm.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
